oru project thudanghunnathinu munne cheyyandath
------------------------------------------------

step 1 -> npx express-generator --hbs    koduthu express generator install cheithu

step 2 -> npm install    koduthu modules install cheithu

step 3 -> npm audit fix   koduthu vulnerabilities fix cheithu

step 4 -> npm install nodemon   koduthu nodemone setcheiyugha

step 5 -> npm install express-handlebars koduthu hbs moduline install chikunnu

step 6 -> npm install mongodb koduthu mongodb database install cheithu connection kodukuka

step 6 -> nodemon bin/www ennu koduthu server start cheyugha shesham browseril poi localhost:3000 ennu koduthu brows cheyugha success fullai run avunnathanu
===============================================================================================================

aadhyam dummy aai object create cheithu enghane work cheyyam ennanu nokunnathu
-------------------------------------------------------------------------------

step 1 -> bootstrapil poi bootstrapinde linksum karyangalum add cheyyan vendi getting startedil starter templatile code copy cheithu index.hbsil paste cheyunnu

step 2 -> athe bootstrapil poi projectinu suitavunna navbar sercheithu copy cheuthu index.hbsil paste cheyunnu datas modify cheyunnu

step 3 -> products display cheyyan vendi cards layouts bootstrapunnu copy chethu index.hbs il paste cheyunnu ennittu namuku avisyamayareethiyil cards modify cheyyunnu

step 4 -> select cheitha card paste cheyunnathinu productinai oru section create cheiyhu aa sectionil oru row div upyogichu set cheithu athil nalu products varunna reethiyil aa row div nullil inniyoru div il  col-md-3 enna calss name upayogicha aa sectione nalai arrainge cheyunnu

step 5 -> aduthathu index.js il oru object array index,hbs sileku passcheyughayanu cheyunnathu nodejs upayogichu karanam koore products undengil athinanusarichu cardukal create cheiyhu kondirikanam athinupakaram loop upayogichu cheyunnathenghane eannariyan vendiyanu

step 6 -> adhyam oru dummy array create cheyunnu athil nalu objects create cheithu responsil indexleku aa array pass cheyunnu

step 7 -> index.hbs il poi for loopinu pakaram {{#each ArrayName}} ethu upayogichanu print cheyugha athupole aa loop {{/each}} upayogichu close cheyughayum cheyunnu ethil products matrame vannittullu but athile details vannittilla aa details varan eavidokke eanthallam details ano varandathu avidellam {{this.propertyName}} ethu upayogichu call cheyunnu propertyName ennu vechal nammal index.js il nalkirikunn product arrayile methodsinte name, category ennighane ullathine property ennu parayunnathu 
===============================================================================================================

enni namuku database upayogichu enghane objects edukam ennu nokkam
-------------------------------------------------------------------

adhyam databasileku details nalkanam athu nalkunnathu adminanu athukondu adminoru section adhyam create cheyyanam athukoodathe ee websitileku kerumbol userne user sectionilekum admine admin sectionilekum pokunna reethiyil root set cheyanam

step 1 ->user sectionum num adminum sectionum leyout set cheyyan vendi views folderil oru leyout folder create cheyunnu aa folderil oru layout.hbs file create cheyunnu

step 2 -> usernum adminum leyout set cheyumbol nammal nalkunna chila karyanghal dfrentairikum udhaharanathinu navbarilu foterilokke usernu adminum vythyastha taskairikum undavugha athinu viewsil thanne partials enna foldeil eathokke sections ano mattam varuthandethu ava user num adminum prthyag .hbs files create cheiyunnu

step 3 -> usersinull pagekalum adminulla page kalum sepratai store cheyyan viewsil admin ennum user ennum randu folders create cheyunnu

step 4 -> nammal create cheitha layoutsum partialsum app.js il poi evidekkeayanu files ullathennu path set cheithu kodukkunnu 

step 5 -> aa path set cheyunnathu app.enginil aa foldersinte path set cheyugha anghane set cheyumbol app.js il hbs moduline immport cheikanam var hbs=require('express-handlebars') enninghane enghane ennathinu sheshame athu workavu enni pathu set cheyunna reethi nokkam 

app.engine('hbs',hbs({extname:'hbs',defualtLayout:'layout',layoutsDir:__dirname+'/views/layout',partialsDir:__dirname+'/views/partials'})) 

step 6 -> user sectionilum adimin sectionilum commanai varunna sections matram views folderile leyout folderil ulla leyout.hbs file il nalkuka bakiulla section namuku labikunnathu nammal ethu user sectionano adimine sectionano nalkiyathu athinanusarichulla sectionsairikum labikuka athinu nammal leyout file il {{{body}}} enninghane upayogikunnu enghane nalkumbol aa page lode avunnathanu

step 7 -> enni viewsilulla index.hbs il commanai varunna bootsrtap navbars evayonnum athil avishyamilla paginu enthano vendathu athu matram nalkiyal mathi

step 8 -> partials folderil chennu athile admin-header enna fililum user-header enna fililum layout filil ulla header section cut cheiyhu evide paste cheyunnu pinnidu athinu anusarichu mattam varuthunnu

step 9 -> partial folderil userinum adminum randu header nalkirikunnu login cheyunna samayathu login cheithathu user ano adminano ennariyan index.js product pass cheyunnidathu comma ittu admin:true ennu pass cheyumbol layout.hbs filil vannu if condition upayogichu adminano alleyo ennu check cheyugha true avumbol admin sectionum display cheyunnu condition admin:false ennanengil user section display cheyunnu

step 10 -> usersinum adminum randu routes nalkan routesil ulla index.js enna file user.js ennu rename cheithu  usersinum, users.js enna file rename cheithu admin.js akki athu admin filai create cheyunnu 

step 11 -> shesham app.js vannu [ var usersRouter = require('./routes/users'); ] usernu pakaram admin ennu nalkuka userRouter nu pakaram adminRouter ennu nalkuka athupole [ var indexRouter = require('./routes/index'); ] ivide indexRouter nu pakaram userRouter ennum index inte aduthu user ennum nalkuka app.jsil thanne kurachu thazhe vannal [ app.use('/', indexRouter); ] ennu kanam athil indexRouter ennathu matti userRouter ennakuka athupole [ app.use('/users', usersRouter); ] ethil userRouter nu pakaram adminRouter ennum '/user' nu pakaram '/admin' ennum mattukha 

step 12 -> routes folderil ulla admin.js il poi [ res.send('respond with a resource'); ] evide [ res.render('admin/view-product',{admin:true}) ] nalkuka oru coma ittu aranu access cheyunnathu ennariyan oru condition nalkunnu 

step 13 -> adminu product list cheyyanu add cheyanumulla page create cheyyan views folderinullele admin folderil chennu oru view-products.hbs file create cheyunnu admine product pages adhikam table structure ayathuckondu bootstrapil oru simple table copy cheithu paste cheithu athil data add cheyyan user.js il ulla products list oru dummy ku vendi copy cheithu admin.js paste cheyunnu koode [ res.render('admin/view-products',{admin:true,products}); ] res.renderil conditionodappam products um nalkunnu

step 14 -> routes il admin.js ulla data viewsil admin folderile view-procts.hbs il connect cheyyunnu enghane yanu conect cheyunnath ennuvechal adhyam oru table paste cheithitundairnu aa tablil hedding sectionum pinne oru loopiloode aa product objectine call cheithu this.property upayogichu athile datasine call cheyunnu athil puthiya product add cheyyan oru add buttonum upayogichirikunnu athile path nalkirikunnathu viewsil admin folderil add-product enna filileku link cheyunnu 

step 15 -> add-productine vilikumbol routsile admin.js il poi routeril get method upayogichu (html page lode agunnathu kondu get um endhingilum submit cheyumbol post um anu upayogikunnathu) add-product enna html pagine call cheyunnu anghane call cheyumbol viewsil admin folderil add-product enna pagil product add cheyyanulla form nalkirikunnu aa formil eavidethekanu pogandethennu path(/admin/add-product)nalkuka kodathe form methode POST methode upayogikunnu file,image athupole yulla karyanghal formil upayogikumbol enctype="multipart/form-data ennu upayogikunnu aa form submit cheyumbol routesile admin.jsil [ res.render('admin/add-product') ] ennu enghane nalkunnu 

step 16 -> routesile admin.js il poi post methde upayogichu add cheyunna data's varuthunnu enghane varuthumbol files karyanghal upload cheyumbol app.js il poi fileUpload [ var fileUpload=require('express-fileUpload') ] enna module require cheyyanam ee require cheitha file uplodine avidethanne oru object[ app.use(fileUpload()) ] enninghane create cheyugha 

step 17 -> adhyam nammal formil nalkiya data submit button nalkumbol pass cheyunnundo ennariyan consolil print cheithu nokam athinu admin.js il console.log(req.body)ennukoduthal aa formil nalkunna data motham consolil print cheyunnathanu but files enthengilum undengil athu printavunnathalla athinu nammal pratyaghamai print cheyyanam athinu console.log(req.files.atributeName) ee atributeName ennuvechal html form nalkumbol image nalkan upayogikunna input tagil name eanna atributil nalkiya name anu atributeName athu koduthu print cheyumbol ella datayum printavunnathanu

===============================================================================================================

eni namuku database upayogichu cheyunnathu enghane yennu kanam 
----------------------------------------------------------------

step 1 -> adhyam project folderil(ShopingCart) config enna folder create dheyugha karanam athilanu databasinte conection ezhuthunnathu athinu vendi aa folderil connection.js enna file create cheyunnu connection.js il mongodb yude conection ezhuthznam athinu [ const mongoClient=require('mongodb').MongoClient ] enninghane mongodb module require cheyanam athinu shesham

step 2 -> oru state enna costant object create cheithirikunnu athil db ennathine null value nalkirikunnu kode oru connect methodum get methodum ezhuthivechittundu get methodil state.db return cheyunna reethiyilanu ezhuthi vachirikunnathu

step 3 -> app.js il vannu connect ennulla function call cheyyanam athinu db enna file edukana [ var db=require('./config/connection') ] enningane nalkunnu shesham connect enna function routes nalkiyathinu mughalilai db.connect enninghane nalkunnu athil oru callback function upayogikunnu aa callback functionullil if condition upayogichu error check cheyunnu

      WORK FLOW OF DATABASE 
      -----------------------
      
      server adhyam varunnathu app.js fililekanu athil db.conect ennu nalkirikunnu db.connectile db 
      ennu vechal app.js il thanne maghalilai [ var db=require('./config/connection') ] ennu nalkitundu
      athil db ennathu /config/connection ee pathilulla connection.js file il poi connect functione
      call cheyunnu aa functionil arguementai done enna callback function nalkirikunnu connect functionullil 
      database connect cheyyanulla [ mongoClient.connect(url,(err,data) ] ee function nalkirikunnu ethinullil 
      url um callback functionum upayogichirikunnu athil err,data um nalkittundu connectionil(url) err 
      varukayanengil if conditionil poi error check cheithu error undingil callbackai vanna doninullil err 
      return cheyunnu [ if(err) return done(err) ] enninghane athava state.db error onnum ellathe connect 
      avughayanengil normalai nalkirikunna done() work avunnathanu 
      
      *) done(err) allengil done() work ayal app.js vannu err anengil db.connect il oru callback function 
         nalkirunnu athile if condition check cheituhu error undengil error partum allengil database connected
         to port 27017 ennu consolil kanikunnathanu 

      *) chila samayathu err kanikum karanam mongodb run avathathukondanu anghane run avatha samayathu 
                  sudo mkdir -p /data/db
                  sudo chown -R $USER /data
                  sudo mongod  -> enni coments nalki mongodb run cheyugha shesham database connect avunnathanu                 

step 4 -> aduthathu databasilude object incert cheyyanam athinadyam admin.js filil poi athil database conectionsu isertionsum ee filil ninnum ozhivzkki oru comman filileku mattuka avidennu aa functionsine call cheithal matram mathi ee filil nammal routerum karanghalum matramanu set cheyunnathu

step 5 -> ShopingCart enna project folderil helpers enna folder create cheyunnu athinullil productinu vendi  product-helpers.js enna oru file create cheyunnu ee filinullilayirikum ella functions define cheyunnathu evide define cheyunna functions backi ulla filsil kittan vendi [ module.exports{ define functions } ] module.exportsinullil functions ellam define cheyunnu nammal eethu callback ayum promisayum cheyyan pattum nammal epol callback reethilanu cheyunnathu module.expertsinullil addProduct enna function [ addProduct:(product,callback)=>{ } ] upayogichu oru product add cheyunnu

step 6 -> helpers folderile product-helpers.js enna file ne admin.js il kittanamengil admin.js filil poi aa filine [ var productHelpers=require('../helpers/product-helpers') ] ennighane require cheyugha athinu shesham admin.js il thanneyulla post methodil poi functione call cheyugha [ productHelpers.addProduct(req.body,(resualt)=>{ thalkalatheku aa page avide renter cheyunnu res.render('admin/add-product')}) ] enghane 

step 7 -> mongodb ude connection product-helpers.js il use cheyan vendi athine product-helpers.js il require cheyunnu [ var db=require('../config/connection') ] enghane shesham addProduct functionullil db.get().collection create cheyunnu athil value incert cheyunnu incert cheithathinde resualt edukan vendi .then upayogichu athil data argumentai ulla callback functionil callback(true) ennu kodukunnu 

step 8 -> websitile formil poi kuracu datas submit cheyunnu aa nalkiya data databasil vannitundo ennariyan puthia terminal open cheithu mongodb ude shellil keri check cheyugha 
      mongo             -> mongodb ude shellil kerunnu
      show dbs          -> database kal ethokke yennu display cheyunnu 
      use shoping       -> nammal create cheitha shoping enna databasileku marunnu
      show collections  -> databasinullil ethoke collections undennu display cheyunnu
      db.product.find() -> collectionullil enthokke datakalanu ullathu ennu kanan

step 9 -> enni cheyunnathu databsil ulla id upayogichu filil enghane store cheyyamennulathanu athinu adhyam product-helpers.js filil poi addProduct functionullil db.get() enna linil oru callback functio upayogikunnu avide true nu pakaram data.ops[0]._id ennu upayogikuka nammal nalkunna data ops enna array roopathilanu varugha aa arrayil otta object ayathukondu ops[0] ennum nalkunnu aa aryil ninnu id eanna value edukunnathukondu dot ittu _id nalkunnu

step 10 -> next admin.js poi post methode functionullil productHelpers ennathil oru call back function nalkirikunn athil arguementai resualt nalkirikunnu athu id yennu mattuka shesham aa callback functionullil pege render cheynnathinu mughalilai vanna resultile image oru varaiblil store cheyunnu [ let image=req.files.Image ] store cheitha image public folderile product-images enna folderileku mattan folder link upayogikunnu koode id yil result varunnathukondu id um nalkunnu plus ittu extensionum nalkunnu koode oru callback functionum upayogikunnu karanam error undengil check cheyyan err ellengil renderil nalkiya page display cheyum enghane nammal oru product add cheithu enni athu display cheikkanam

step 11 -> admin.js filil already nammal kurachu dummy datas nalkittundairunnu athu athu avishymillathathukondu ozhivakki ozhivakki enni datas databasil ninnanu edukunnathu athu edukan product-helpers.js il poi function ezhuthunnu

step 12 -> athinu munne nammal config folderil poi collections.js enna file create cheithu onnil kooduthal thavana use heyunna collections varable karyanghal commanayi oridathu oru variablil declaire cheyunnu avishyamulla samayathu aa variable call cheithal mathiyagum mattam varuthanamengilum ee filil vannu mattam varuthiyal mathi ella edathum poi mattande avishyam varunnilla. ee collection.js ennafilil databasenu varunna product enna collectione module.expertinullil oru object reethiyil PRODUCT_COLLECTIO:'product' enninghane declaire cheyunnu capital lettersil variable nalkiyal athu constant variable anu

step 13 ->collection.js il ulla variabls mattu filil labikkan [ var collection=require('../config/collection') ] enghane require cheyugha sheham product-helpers.js filil collection.js ne require cheitha shesham oru objectinullanu fuctions kodukunnathu athu kondu coma use cheithittanu oro functionsum define cheyunnathu evid getAllProducts enna functionullil promise Async function retun cheyunnu resolve,return enni randu states arguementai upayogichukondu [ return new Promise(async(resolve,reject)=>{ } ] promise functionullil oru variable declaire cheithu aa variablil databasile collectiosilulla data kalella oru arrayleku matti aa variablileku assign cheyunnu await statil ninnukondu [ let products=await db.get().collection(collection.PRODUCT_COLLECTION).find().toArray() ] ennighane aa datane resolve(product) ennu upayogichu resolve cheyunnu athayathu return cheyunnu 

step 14 -> admin.js il poi onnamathe get methodil poi productHelpersine call cheyunnu koode promisil return cheynna data .then upayogichu athinullil products enna parameter ulla function create cheyunnu aa parameteril promisil ninnum return cheyunna data access chethu ee functionullil display cheyunnu
===============================================================================================================

admin portalil datas add cheyughayum athu aa pagil display cheikukayum cheithu enni admin portalil add cheitha karyanghal enghane user portalil ethikum ennu nokkam
--------------------------------------------------------------------------------------------------------------

step 1 -> adyam user.js poi athil nalkirikunna dummy datakalellam delet cheithu pakaram admin.js il poi getAllProducts enna methode motham copy cheithu user.js il vannu paste cheyunnu kode prodect-helpers enna flilne user.js ileku require cheyunnu [ var productHelpers=require('../helpers/product-helpers') ] pinne eathu pagileku pass cheyanam ennum nalkunnu [ res.render('user/view-products',{admin:true,products}); ]

step 2 -> user folderil poi userinu kananulla view-products.hbs enna peril oru page create cheyunnu index.hbsil already njan oru product display cheyyan card create cheithirunnu athu copy cheithu userle view-products.hbs il past cheyunnu athupole admin folderile view-productsil poi image path copy cheithu userile view-products.hbs il vannu paste cheyugha

step 3 -> database nammude gmailil kananvendi nammal cheyyandathu
            * browser open chethu robo mongo ennu serch cheyugha
            * athil robo 3T ennathil download link click cheyugha
            * athil download button click cheithu OS ethanu ennu select cheithu download cheyugha